/*
 * This file is generated by jOOQ.
*/
package com.apon.database.generated.tables;


import com.apon.database.generated.Indexes;
import com.apon.database.generated.Keys;
import com.apon.database.generated.Taalmaatjes;
import com.apon.database.generated.tables.records.LogonuserRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Logonuser extends TableImpl<LogonuserRecord> {

    private static final long serialVersionUID = -1851313474;

    /**
     * The reference instance of <code>taalmaatjes.logonuser</code>
     */
    public static final Logonuser LOGONUSER = new Logonuser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogonuserRecord> getRecordType() {
        return LogonuserRecord.class;
    }

    /**
     * The column <code>taalmaatjes.logonuser.logonUserId</code>.
     */
    public final TableField<LogonuserRecord, Integer> LOGONUSERID = createField("logonUserId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>taalmaatjes.logonuser.username</code>.
     */
    public final TableField<LogonuserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>taalmaatjes.logonuser.password</code>.
     */
    public final TableField<LogonuserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(60).nullable(false), this, "");

    /**
     * The column <code>taalmaatjes.logonuser.nrOfLogonAttempts</code>.
     */
    public final TableField<LogonuserRecord, Integer> NROFLOGONATTEMPTS = createField("nrOfLogonAttempts", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>taalmaatjes.logonuser.dateEndValid</code>.
     */
    public final TableField<LogonuserRecord, Date> DATEENDVALID = createField("dateEndValid", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>taalmaatjes.logonuser</code> table reference
     */
    public Logonuser() {
        this(DSL.name("logonuser"), null);
    }

    /**
     * Create an aliased <code>taalmaatjes.logonuser</code> table reference
     */
    public Logonuser(String alias) {
        this(DSL.name(alias), LOGONUSER);
    }

    /**
     * Create an aliased <code>taalmaatjes.logonuser</code> table reference
     */
    public Logonuser(Name alias) {
        this(alias, LOGONUSER);
    }

    private Logonuser(Name alias, Table<LogonuserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Logonuser(Name alias, Table<LogonuserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Taalmaatjes.TAALMAATJES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOGONUSER_LOUS_USNA_UC, Indexes.LOGONUSER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LogonuserRecord> getPrimaryKey() {
        return Keys.KEY_LOGONUSER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LogonuserRecord>> getKeys() {
        return Arrays.<UniqueKey<LogonuserRecord>>asList(Keys.KEY_LOGONUSER_PRIMARY, Keys.KEY_LOGONUSER_LOUS_USNA_UC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Logonuser as(String alias) {
        return new Logonuser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Logonuser as(Name alias) {
        return new Logonuser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Logonuser rename(String name) {
        return new Logonuser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Logonuser rename(Name name) {
        return new Logonuser(name, null);
    }
}
