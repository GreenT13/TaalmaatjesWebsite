/*
 * This file is generated by jOOQ.
*/
package com.apon.database.generated.tables.daos;


import com.apon.database.generated.tables.Logonuser;
import com.apon.database.generated.tables.pojos.LogonuserPojo;
import com.apon.database.generated.tables.records.LogonuserRecord;

import java.sql.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogonuserDao extends DAOImpl<LogonuserRecord, LogonuserPojo, Integer> {

    /**
     * Create a new LogonuserDao without any configuration
     */
    public LogonuserDao() {
        super(Logonuser.LOGONUSER, LogonuserPojo.class);
    }

    /**
     * Create a new LogonuserDao with an attached configuration
     */
    public LogonuserDao(Configuration configuration) {
        super(Logonuser.LOGONUSER, LogonuserPojo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(LogonuserPojo object) {
        return object.getLogonuserid();
    }

    /**
     * Fetch records that have <code>logonUserId IN (values)</code>
     */
    public List<LogonuserPojo> fetchByLogonuserid(Integer... values) {
        return fetch(Logonuser.LOGONUSER.LOGONUSERID, values);
    }

    /**
     * Fetch a unique record that has <code>logonUserId = value</code>
     */
    public LogonuserPojo fetchOneByLogonuserid(Integer value) {
        return fetchOne(Logonuser.LOGONUSER.LOGONUSERID, value);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<LogonuserPojo> fetchByUsername(String... values) {
        return fetch(Logonuser.LOGONUSER.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public LogonuserPojo fetchOneByUsername(String value) {
        return fetchOne(Logonuser.LOGONUSER.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<LogonuserPojo> fetchByPassword(String... values) {
        return fetch(Logonuser.LOGONUSER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>nrOfLogonAttempts IN (values)</code>
     */
    public List<LogonuserPojo> fetchByNroflogonattempts(Integer... values) {
        return fetch(Logonuser.LOGONUSER.NROFLOGONATTEMPTS, values);
    }

    /**
     * Fetch records that have <code>dateEndValid IN (values)</code>
     */
    public List<LogonuserPojo> fetchByDateendvalid(Date... values) {
        return fetch(Logonuser.LOGONUSER.DATEENDVALID, values);
    }
}
