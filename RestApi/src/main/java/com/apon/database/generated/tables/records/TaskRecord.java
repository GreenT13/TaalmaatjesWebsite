/*
 * This file is generated by jOOQ.
*/
package com.apon.database.generated.tables.records;


import com.apon.database.generated.tables.Task;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record7<Integer, String, String, String, Integer, Boolean, Date> {

    private static final long serialVersionUID = 997266379;

    /**
     * Setter for <code>taalmaatjes.task.taskId</code>.
     */
    public void setTaskid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>taalmaatjes.task.taskId</code>.
     */
    public Integer getTaskid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>taalmaatjes.task.externalIdentifier</code>.
     */
    public void setExternalidentifier(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>taalmaatjes.task.externalIdentifier</code>.
     */
    public String getExternalidentifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>taalmaatjes.task.title</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taalmaatjes.task.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>taalmaatjes.task.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>taalmaatjes.task.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>taalmaatjes.task.volunteerId</code>.
     */
    public void setVolunteerid(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>taalmaatjes.task.volunteerId</code>.
     */
    public Integer getVolunteerid() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>taalmaatjes.task.isFinished</code>.
     */
    public void setIsfinished(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>taalmaatjes.task.isFinished</code>.
     */
    public Boolean getIsfinished() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>taalmaatjes.task.dateToBeFinished</code>.
     */
    public void setDatetobefinished(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>taalmaatjes.task.dateToBeFinished</code>.
     */
    public Date getDatetobefinished() {
        return (Date) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Integer, Boolean, Date> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, String, String, String, Integer, Boolean, Date> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Task.TASK.TASKID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Task.TASK.EXTERNALIDENTIFIER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Task.TASK.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Task.TASK.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Task.TASK.VOLUNTEERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return Task.TASK.ISFINISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field7() {
        return Task.TASK.DATETOBEFINISHED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getTaskid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getExternalidentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getVolunteerid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component6() {
        return getIsfinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component7() {
        return getDatetobefinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getTaskid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getExternalidentifier();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getVolunteerid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getIsfinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value7() {
        return getDatetobefinished();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value1(Integer value) {
        setTaskid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value2(String value) {
        setExternalidentifier(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value3(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value4(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value5(Integer value) {
        setVolunteerid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value6(Boolean value) {
        setIsfinished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord value7(Date value) {
        setDatetobefinished(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Boolean value6, Date value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Integer taskid, String externalidentifier, String title, String description, Integer volunteerid, Boolean isfinished, Date datetobefinished) {
        super(Task.TASK);

        set(0, taskid);
        set(1, externalidentifier);
        set(2, title);
        set(3, description);
        set(4, volunteerid);
        set(5, isfinished);
        set(6, datetobefinished);
    }
}
