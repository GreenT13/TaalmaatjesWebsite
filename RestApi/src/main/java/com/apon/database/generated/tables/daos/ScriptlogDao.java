/*
 * This file is generated by jOOQ.
*/
package com.apon.database.generated.tables.daos;


import com.apon.database.generated.tables.Scriptlog;
import com.apon.database.generated.tables.pojos.ScriptlogPojo;
import com.apon.database.generated.tables.records.ScriptlogRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScriptlogDao extends DAOImpl<ScriptlogRecord, ScriptlogPojo, String> {

    /**
     * Create a new ScriptlogDao without any configuration
     */
    public ScriptlogDao() {
        super(Scriptlog.SCRIPTLOG, ScriptlogPojo.class);
    }

    /**
     * Create a new ScriptlogDao with an attached configuration
     */
    public ScriptlogDao(Configuration configuration) {
        super(Scriptlog.SCRIPTLOG, ScriptlogPojo.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(ScriptlogPojo object) {
        return object.getScriptname();
    }

    /**
     * Fetch records that have <code>scriptName IN (values)</code>
     */
    public List<ScriptlogPojo> fetchByScriptname(String... values) {
        return fetch(Scriptlog.SCRIPTLOG.SCRIPTNAME, values);
    }

    /**
     * Fetch a unique record that has <code>scriptName = value</code>
     */
    public ScriptlogPojo fetchOneByScriptname(String value) {
        return fetchOne(Scriptlog.SCRIPTLOG.SCRIPTNAME, value);
    }

    /**
     * Fetch records that have <code>tsStarted IN (values)</code>
     */
    public List<ScriptlogPojo> fetchByTsstarted(Timestamp... values) {
        return fetch(Scriptlog.SCRIPTLOG.TSSTARTED, values);
    }

    /**
     * Fetch records that have <code>tsFinished IN (values)</code>
     */
    public List<ScriptlogPojo> fetchByTsfinished(Timestamp... values) {
        return fetch(Scriptlog.SCRIPTLOG.TSFINISHED, values);
    }

    /**
     * Fetch records that have <code>isCompleted IN (values)</code>
     */
    public List<ScriptlogPojo> fetchByIscompleted(Boolean... values) {
        return fetch(Scriptlog.SCRIPTLOG.ISCOMPLETED, values);
    }
}
