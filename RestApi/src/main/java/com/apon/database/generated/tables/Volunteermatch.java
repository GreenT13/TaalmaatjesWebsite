/*
 * This file is generated by jOOQ.
*/
package com.apon.database.generated.tables;


import com.apon.database.generated.Indexes;
import com.apon.database.generated.Keys;
import com.apon.database.generated.Public;
import com.apon.database.generated.tables.records.VolunteermatchRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Volunteermatch extends TableImpl<VolunteermatchRecord> {

    private static final long serialVersionUID = 1699141473;

    /**
     * The reference instance of <code>PUBLIC.VOLUNTEERMATCH</code>
     */
    public static final Volunteermatch VOLUNTEERMATCH = new Volunteermatch();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VolunteermatchRecord> getRecordType() {
        return VolunteermatchRecord.class;
    }

    /**
     * The column <code>PUBLIC.VOLUNTEERMATCH.VOLUNTEERID</code>.
     */
    public final TableField<VolunteermatchRecord, Integer> VOLUNTEERID = createField("VOLUNTEERID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.VOLUNTEERMATCH.VOLUNTEERMATCHID</code>.
     */
    public final TableField<VolunteermatchRecord, Integer> VOLUNTEERMATCHID = createField("VOLUNTEERMATCHID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.VOLUNTEERMATCH.EXTERNALIDENTIFIER</code>.
     */
    public final TableField<VolunteermatchRecord, String> EXTERNALIDENTIFIER = createField("EXTERNALIDENTIFIER", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.VOLUNTEERMATCH.STUDENTID</code>.
     */
    public final TableField<VolunteermatchRecord, Integer> STUDENTID = createField("STUDENTID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.VOLUNTEERMATCH.DATESTART</code>.
     */
    public final TableField<VolunteermatchRecord, Date> DATESTART = createField("DATESTART", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.VOLUNTEERMATCH.DATEEND</code>.
     */
    public final TableField<VolunteermatchRecord, Date> DATEEND = createField("DATEEND", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>PUBLIC.VOLUNTEERMATCH</code> table reference
     */
    public Volunteermatch() {
        this(DSL.name("VOLUNTEERMATCH"), null);
    }

    /**
     * Create an aliased <code>PUBLIC.VOLUNTEERMATCH</code> table reference
     */
    public Volunteermatch(String alias) {
        this(DSL.name(alias), VOLUNTEERMATCH);
    }

    /**
     * Create an aliased <code>PUBLIC.VOLUNTEERMATCH</code> table reference
     */
    public Volunteermatch(Name alias) {
        this(alias, VOLUNTEERMATCH);
    }

    private Volunteermatch(Name alias, Table<VolunteermatchRecord> aliased) {
        this(alias, aliased, null);
    }

    private Volunteermatch(Name alias, Table<VolunteermatchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_KEY_1, Indexes.VOMA_EXTID_INDEX_1, Indexes.VOMA_STUD_FK_INDEX_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VolunteermatchRecord> getPrimaryKey() {
        return Keys.VOMA_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VolunteermatchRecord>> getKeys() {
        return Arrays.<UniqueKey<VolunteermatchRecord>>asList(Keys.VOMA_PK, Keys.VOMA_EXTID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<VolunteermatchRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VolunteermatchRecord, ?>>asList(Keys.VOMA_VOLU_FK, Keys.VOMA_STUD_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Volunteermatch as(String alias) {
        return new Volunteermatch(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Volunteermatch as(Name alias) {
        return new Volunteermatch(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Volunteermatch rename(String name) {
        return new Volunteermatch(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Volunteermatch rename(Name name) {
        return new Volunteermatch(name, null);
    }
}
